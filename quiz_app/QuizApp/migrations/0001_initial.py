# Generated by Django 4.2.2 on 2023-07-16 07:56

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('description', models.TextField(null=True)),
                ('question_number', models.IntegerField()),
                ('generating_options', models.JSONField(null=True)),
                ('deadline', models.DateTimeField()),
                ('timer', models.DurationField()),
                ('max_attempts', models.IntegerField()),
                ('is_resumable', models.BooleanField(default=True)),
                ('is_deletable', models.BooleanField(default=False)),
                ('score', models.IntegerField(null=True)),
                ('feedback_type', models.CharField(choices=[('TEAC', 'Teacher review'), ('PEER', 'Peer review')], max_length=4)),
                ('feedback_delay', models.DurationField()),
                ('feedback_reviewer', models.IntegerField(choices=[(0, 'Teacher assigned'), (1, 'Random assigned')])),
                ('feedback_blind', models.IntegerField(choices=[(0, 'Open'), (1, 'Hide Reviewer'), (2, 'Hide Author'), (3, 'Double Blind')])),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('short_name', models.CharField(max_length=8)),
                ('description', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('description', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('website', models.URLField(max_length=256)),
                ('type', models.CharField(choices=[('TEA', 'Teacher'), ('STU', 'Student')], max_length=3)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('questione_type', models.CharField(choices=[('SINGLE', 'Single'), ('MULTIPLE', 'Multiple'), ('INVERTIBLE', 'Invertible'), ('FILL', 'Fill')], max_length=16)),
                ('weight', models.IntegerField(default=1)),
                ('text_and_keys', models.JSONField()),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='QuizApp.subject')),
                ('tags', models.ManyToManyField(to='QuizApp.tag')),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('description', models.TextField(blank=True)),
                ('level', models.IntegerField(choices=[(1, 'Prima'), (2, 'Seconda'), (3, 'Terza'), (4, 'Quarta'), (5, 'Quinta')], null=True)),
                ('section', models.CharField(max_length=8, null=True)),
                ('year', models.CharField(max_length=16, null=True)),
                ('members', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('description', models.TextField(null=True)),
                ('topic', models.CharField(max_length=64, null=True)),
                ('is_virtual', models.BooleanField(default=False)),
                ('questions', models.ManyToManyField(to='QuizApp.question')),
                ('subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='QuizApp.subject')),
            ],
        ),
        migrations.CreateModel(
            name='Attempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateTimeField(auto_now_add=True)),
                ('seed', models.CharField(default='', max_length=32)),
                ('saved_answer', models.JSONField(null=True)),
                ('saved_time', models.DateTimeField(null=True)),
                ('submit_answer', models.JSONField(null=True)),
                ('submit_time', models.DateTimeField(null=True)),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='QuizApp.assignment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attempting_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='assignment',
            name='collection',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='QuizApp.collection'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='creator',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
    ]
